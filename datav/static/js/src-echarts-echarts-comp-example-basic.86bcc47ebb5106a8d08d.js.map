{"version":3,"sources":["/Users/apple/codes/dataVision-dui/src/Echarts/EchartsComp/EchartsComp.jsx","/Users/apple/codes/dataVision-dui/src/Echarts/EchartsComp/index.js","/Users/apple/codes/dataVision-dui/src/Echarts/EchartsComp/example/shine.js","/Users/apple/codes/dataVision-dui/src/Echarts/EchartsComp/example/Basic.mdx","/Users/apple/codes/dataVision-dui/src/lib/debounce.js"],"names":["EchartsComp","props","resize","ref","option","myChart","componentDidMount","renderEcharts","observer","window","ResizeObserver","debounce","entries","forEach","observe","echarts","init","theme","setOption","onRenderChart","prevProps","prevState","snapshot","this","disconnect","isDisposed","dispose","className","style","r","React","Component","defaultProps","f","registerTheme","shine","layoutProps","MDXContent","components","mdxType","parentName","__position","__code","__scope","Playground","state","tooltip","trigger","borderColor","borderWidth","legend","data","xAxis","type","boundaryGap","splitLine","show","yAxis","lineStyle","opacity","series","name","clearInterval","timerKey","length","index","dispatchAction","seriesIndex","dataIndex","setInterval","bind","height","detail","radius","label","normal","emphasis","value","currentIndex","setState","display","width","JSON","stringify","isMDXComponent","func","timeout","wait","immediate","context","args","arguments","later","apply","callNow","clearTimeout","setTimeout"],"mappings":"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","file":"static/js/src-echarts-echarts-comp-example-basic.13eb3624.js","sourcesContent":["import React from 'react'\nimport echarts from 'echarts'\nimport debounce from '../../lib/debounce'\n\nclass EchartsComp extends React.Component {\n  static defaultProps = {\n    onRenderChart: f => f // 当图表渲染完成后，回调\n  }\n\n  constructor (props) {\n    super(props)\n    this.ref = null\n    this.myChart = null\n  }\n\n  resize = () => {\n    if (this.ref && this.props.option && this.myChart) {\n      this.myChart.resize()\n    }\n  }\n\n  componentDidMount = () => {\n    this.renderEcharts(this.props)\n    this.observer = new window.ResizeObserver(debounce(entries => {\n      entries.forEach(() => {\n        this.resize()\n      })\n    }))\n    this.observer.observe(this.ref)\n  }\n\n  componentDidUpdate (prevProps, prevState, snapshot) {\n    if (this.props.option && prevProps.option !== this.props.option) {\n      this.renderEcharts(this.props)\n    }\n  }\n\n  renderEcharts = props => {\n    if (!props.option) return\n\n    // 绘制图表\n    if (!this.myChart) {\n      this.myChart = echarts.init(this.ref, props.theme)\n    }\n    this.myChart.setOption(props.option)\n\n    props.onRenderChart(this.myChart, props.option)\n  }\n\n  componentWillUnmount () {\n    this.observer.disconnect()\n    this.observer = null\n    if (this.myChart && !this.myChart.isDisposed()) {\n      this.myChart.dispose()\n      this.myChart = null\n    }\n  }\n\n  render () {\n    const props = this.props\n    return (\n      <div className={props.className} style={props.style} ref={r => this.ref = r} />\n    )\n  }\n}\n\nEchartsComp.echarts = echarts\n\nexport default EchartsComp\n","import EchartsComp from './EchartsComp'\n\nexport default EchartsComp\n","import shine from './shine.json'\n\nimport echarts from 'echarts'\n\necharts.registerTheme('shine', shine)\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground } from 'docz'\nimport EchartsComp from '../index'\nimport './shine'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"echartscomp-echarts通用组件\"\n    }}>{`EchartsComp ECharts通用组件`}</h2>\n\n\n    <h2 {...{\n      \"id\": \"基本属性\"\n    }}>{`基本属性`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`属性名`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`描述`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`默认值`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`必填项`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`option`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`echarts option配置`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`theme`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`echarts图表的主题`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`onRenderChart`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`图表渲染完成后的回调函数，回调参数(echart实例, option)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`function`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`className`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`根结点类名`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`style`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`根结点style`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"折线图使用\"\n    }}>{`折线图使用`}</h2>\n    <Playground __position={0} __code={'class Demo extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = {\\n        option: {\\n          tooltip: {\\n            trigger: \\'axis\\',\\n            borderColor: \\'rgba(244,176,21,0.53)\\',\\n            borderWidth: 2,\\n          },\\n          legend: {\\n            data: [\\'老年病患者\\', \\'高血压患者\\', \\'糖尿病患者\\'],\\n          },\\n          xAxis: {\\n            type: \\'category\\',\\n            boundaryGap: true,\\n            data: [\\n              \\'2012年\\',\\n              \\'2013年\\',\\n              \\'2014年\\',\\n              \\'2015年\\',\\n              \\'2016年\\',\\n              \\'2017年\\',\\n              \\'2018年\\',\\n            ],\\n            splitLine: { show: false },\\n          },\\n          yAxis: {\\n            type: \\'value\\',\\n            splitLine: {\\n              show: true,\\n              lineStyle: { type: \\'dashed\\', opacity: 0.2 },\\n            },\\n          },\\n          series: [\\n            {\\n              name: \\'老年病患者\\',\\n              type: \\'line\\',\\n              data: [12340, 23432, 13401, 14134, 21340, 21340, 21340],\\n            },\\n            {\\n              name: \\'高血压患者\\',\\n              type: \\'line\\',\\n              data: [27220, 37182, 37191, 25234, 31037, 41340, 41340],\\n            },\\n            {\\n              name: \\'糖尿病患者\\',\\n              type: \\'line\\',\\n              data: [23750, 27232, 23701, 20154, 24770, 31340, 27340],\\n            },\\n          ],\\n        },\\n      }\\n    }\\n    componentWillUnmount() {\\n      clearInterval(this.timerKey)\\n    }\\n    onRenderChart(myChart, option) {\\n      clearInterval(this.timerKey)\\n      let length = option.xAxis.data.length\\n      this.index = 0\\n      myChart.dispatchAction({\\n        type: \\'showTip\\',\\n        seriesIndex: 0,\\n        dataIndex: this.index,\\n      })\\n      this.timerKey = setInterval(() => {\\n        this.index = this.index + 1 >= length ? 0 : this.index + 1\\n        myChart.dispatchAction({\\n          type: \\'showTip\\',\\n          seriesIndex: 0,\\n          dataIndex: this.index,\\n        })\\n      }, 3000)\\n    }\\n    render() {\\n      return (\\n        <EchartsComp\\n          theme=\\\"shine\\\"\\n          option={this.state.option}\\n          onRenderChart={this.onRenderChart.bind(this)}\\n          style={{ height: 300 }}\\n        />\\n      )\\n    }\\n  }'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      EchartsComp\n    }} mdxType=\"Playground\">\n      {class Demo extends React.Component {\n        constructor(props) {\n          super(props);\n          this.state = {\n            option: {\n              tooltip: {\n                trigger: 'axis',\n                borderColor: 'rgba(244,176,21,0.53)',\n                borderWidth: 2\n              },\n              legend: {\n                data: ['老年病患者', '高血压患者', '糖尿病患者']\n              },\n              xAxis: {\n                type: 'category',\n                boundaryGap: true,\n                data: ['2012年', '2013年', '2014年', '2015年', '2016年', '2017年', '2018年'],\n                splitLine: {\n                  show: false\n                }\n              },\n              yAxis: {\n                type: 'value',\n                splitLine: {\n                  show: true,\n                  lineStyle: {\n                    type: 'dashed',\n                    opacity: 0.2\n                  }\n                }\n              },\n              series: [{\n                name: '老年病患者',\n                type: 'line',\n                data: [12340, 23432, 13401, 14134, 21340, 21340, 21340]\n              }, {\n                name: '高血压患者',\n                type: 'line',\n                data: [27220, 37182, 37191, 25234, 31037, 41340, 41340]\n              }, {\n                name: '糖尿病患者',\n                type: 'line',\n                data: [23750, 27232, 23701, 20154, 24770, 31340, 27340]\n              }]\n            }\n          };\n        }\n\n        componentWillUnmount() {\n          clearInterval(this.timerKey);\n        }\n\n        onRenderChart(myChart, option) {\n          clearInterval(this.timerKey);\n          let length = option.xAxis.data.length;\n          this.index = 0;\n          myChart.dispatchAction({\n            type: 'showTip',\n            seriesIndex: 0,\n            dataIndex: this.index\n          });\n          this.timerKey = setInterval(() => {\n            this.index = this.index + 1 >= length ? 0 : this.index + 1;\n            myChart.dispatchAction({\n              type: 'showTip',\n              seriesIndex: 0,\n              dataIndex: this.index\n            });\n          }, 3000);\n        }\n\n        render() {\n          return <EchartsComp theme='shine' option={this.state.option} onRenderChart={this.onRenderChart.bind(this)} style={{\n            height: 300\n          }} mdxType=\"EchartsComp\" />;\n        }\n\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"饼图使用\"\n    }}>{`饼图使用`}</h2>\n    <Playground __position={1} __code={'class Demo2 extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = {\\n        detail: {},\\n        option: {\\n          series: [\\n            {\\n              type: \\'pie\\',\\n              radius: [\\'50%\\', \\'80%\\'],\\n              label: {\\n                normal: {\\n                  show: false,\\n                },\\n                emphasis: {\\n                  show: false,\\n                },\\n              },\\n              data: [\\n                { value: 635, name: \\'药品\\' },\\n                { value: 310, name: \\'门诊\\' },\\n                { value: 234, name: \\'手术\\' },\\n                { value: 235, name: \\'器材\\' },\\n                { value: 148, name: \\'咨询\\' },\\n              ],\\n            },\\n          ],\\n        },\\n      }\\n    }\\n    componentWillUnmount() {\\n      clearInterval(this.timerKey)\\n    }\\n    onRenderChart(myChart, option) {\\n      clearInterval(this.timerKey)\\n      this.currentIndex = 0\\n      myChart.dispatchAction({\\n        type: \\'highlight\\',\\n        dataIndex: this.currentIndex,\\n      })\\n\\n      this.setState({ detail: option.series[0].data[this.currentIndex] })\\n\\n      this.timerKey = setInterval(() => {\\n        myChart.dispatchAction({\\n          type: \\'downplay\\',\\n          dataIndex: this.currentIndex,\\n        })\\n\\n        this.currentIndex++\\n        this.currentIndex = this.currentIndex % option.series[0].data.length\\n\\n        myChart.dispatchAction({\\n          type: \\'highlight\\',\\n          dataIndex: this.currentIndex,\\n        })\\n\\n        this.setState({ detail: option.series[0].data[this.currentIndex] })\\n      }, 3000)\\n    }\\n    render() {\\n      const state = this.state\\n      return (\\n        <div style={{ display: \\'flex\\' }}>\\n          <EchartsComp\\n            theme=\\\"shine\\\"\\n            option={state.option}\\n            onRenderChart={this.onRenderChart.bind(this)}\\n            style={{ width: 300, height: 300 }}\\n          />\\n          <div>{JSON.stringify(state.detail)}</div>\\n        </div>\\n      )\\n    }\\n  }'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      EchartsComp\n    }} mdxType=\"Playground\">\n      {class Demo2 extends React.Component {\n        constructor(props) {\n          super(props);\n          this.state = {\n            detail: {},\n            option: {\n              series: [{\n                type: 'pie',\n                radius: ['50%', '80%'],\n                label: {\n                  normal: {\n                    show: false\n                  },\n                  emphasis: {\n                    show: false\n                  }\n                },\n                data: [{\n                  value: 635,\n                  name: '药品'\n                }, {\n                  value: 310,\n                  name: '门诊'\n                }, {\n                  value: 234,\n                  name: '手术'\n                }, {\n                  value: 235,\n                  name: '器材'\n                }, {\n                  value: 148,\n                  name: '咨询'\n                }]\n              }]\n            }\n          };\n        }\n\n        componentWillUnmount() {\n          clearInterval(this.timerKey);\n        }\n\n        onRenderChart(myChart, option) {\n          clearInterval(this.timerKey);\n          this.currentIndex = 0;\n          myChart.dispatchAction({\n            type: 'highlight',\n            dataIndex: this.currentIndex\n          });\n          this.setState({\n            detail: option.series[0].data[this.currentIndex]\n          });\n          this.timerKey = setInterval(() => {\n            myChart.dispatchAction({\n              type: 'downplay',\n              dataIndex: this.currentIndex\n            });\n            this.currentIndex++;\n            this.currentIndex = this.currentIndex % option.series[0].data.length;\n            myChart.dispatchAction({\n              type: 'highlight',\n              dataIndex: this.currentIndex\n            });\n            this.setState({\n              detail: option.series[0].data[this.currentIndex]\n            });\n          }, 3000);\n        }\n\n        render() {\n          const state = this.state;\n          return <div style={{\n            display: 'flex'\n          }}>\n    <EchartsComp theme='shine' option={state.option} onRenderChart={this.onRenderChart.bind(this)} style={{\n              width: 300,\n              height: 300\n            }} mdxType=\"EchartsComp\" />\n    <div>\n      {JSON.stringify(state.detail)}\n    </div>\n  </div>;\n        }\n\n      }}\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","// Credit David Walsh (https://davidwalsh.name/javascript-debounce-function)\n\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\n\nexport default function debounce (func, wait = 250, immediate = false) {\n  var timeout\n\n  return function executedFunction () {\n    var context = this\n    var args = arguments\n\n    var later = function () {\n      timeout = null\n      if (!immediate) func.apply(context, args)\n    }\n\n    var callNow = immediate && !timeout\n\n    clearTimeout(timeout)\n\n    timeout = setTimeout(later, wait)\n\n    if (callNow) func.apply(context, args)\n  }\n}\n"],"sourceRoot":""}