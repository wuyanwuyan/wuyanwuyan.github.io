{"version":3,"sources":["/Users/apple/codes/dataVision-dui/src/Decorate/AnimateBars/AnimateBars.jsx","/Users/apple/codes/dataVision-dui/src/Decorate/AnimateBars/index.jsx","/Users/apple/codes/dataVision-dui/src/Decorate/AnimateBars/example/Basic.mdx"],"names":["AnimateBars","props","animateChangeCount","activeCount","duration","anime","remove","animateObj","setState","curActiveCount","state","targets","round","easing","update","complete","this","prevProps","prevState","snapshot","startFrom","itemStyle","flexBasis","itemSize","className","cx","style","Array","from","length","count","map","v","i","itemClassName","key","React","PureComponent","defaultProps","layoutProps","MDXContent","components","mdxType","parentName","__position","__code","__scope","Playground","interval","setInterval","Math","floor","random","clearInterval","Fragment","width","height","display","borderRadius","marginLeft","Component","isMDXComponent"],"mappings":"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","file":"static/js/src-decorate-animate-bars-example-basic.b44738fc.js","sourcesContent":["import React from 'react'\nimport './style.scss'\nimport PropType from 'prop-types'\nimport cx from 'classnames'\nimport anime from 'animejs'\n\nexport default class AnimateBars extends React.PureComponent {\n  static defaultProps = {\n    count: 20,\n    activeCount: 10,\n    startFrom: 'top',\n    duration: 1000,\n    itemSize: 8,\n    itemStyle: {}\n  }\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      curActiveCount: 0\n    }\n\n    this.animateObj = {\n      curActiveCount: 0\n    }\n  }\n\n  componentDidMount () {\n    this.animateChangeCount(this.props.activeCount)\n  }\n\n  componentDidUpdate (prevProps, prevState, snapshot) {\n    if (prevProps.activeCount !== this.props.activeCount) {\n      this.animateChangeCount()\n    }\n  }\n\n  animateChangeCount = () => {\n    let {activeCount, duration} = this.props\n    anime.remove(this.animateObj)\n    if (duration < 1) {\n      this.setState({curActiveCount: activeCount})\n      return\n    }\n    this.animateObj = {curActiveCount: this.state.curActiveCount}\n    anime({\n      targets: this.animateObj,\n      curActiveCount: activeCount,\n      round: 1,\n      easing: 'linear',\n      duration,\n      update: () => {\n        if (this.state.curActiveCount === this.animateObj.curActiveCount) return\n        this.setState({curActiveCount: this.animateObj.curActiveCount})\n      },\n      complete: () => {\n        if (this.state.curActiveCount === activeCount) return\n        this.setState({curActiveCount: activeCount})\n      }\n    })\n  }\n\n  componentWillUnmount () {\n    anime.remove(this.animateObj)\n  }\n\n  render () {\n    const {props, state} = this\n    let startFrom = props.startFrom\n    const itemStyle = {...props.itemStyle, flexBasis: props.itemSize}\n    return (\n      <div className={cx('dui-animate-bar', startFrom, props.className)} style={props.style}>\n        {\n          Array.from({length: props.count}).map((v, i) => {\n            let itemClassName = cx('dui-animate-bar-item', props.itemClassName, {\n              'active': i < state.curActiveCount\n            })\n            return <div key={i} style={itemStyle} className={itemClassName} />\n          })\n        }\n      </div>\n    )\n  }\n}\n\nAnimateBars.propTypes = {\n  startFrom: PropType.oneOf(['left', 'right', 'top', 'bottom'])\n}\n","import AnimateBars from './AnimateBars'\n\nexport default AnimateBars\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground } from 'docz'\nimport AnimateBars from '../index'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2 {...{\n      \"id\": \"animatebars\"\n    }}>{`AnimateBars`}</h2>\n    <h2 {...{\n      \"id\": \"基本属性\"\n    }}>{`基本属性`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`属性名`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`描述`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`默认值`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`必填项`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`activeCount`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`激活数`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`10`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`count`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`总数`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`20`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`itemSize`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`单个条的尺寸`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`8`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`startFrom`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`top，right，left，bottom，条状的起始方向`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`left`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`duration`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`激活数变化，缓动时间,若等于0，无动画`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`1000`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`style`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`根结点style`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`className`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`根结点类名`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`itemStyle`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`单项style`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`itemClassName`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`单项的类名`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"基本使用\"\n    }}>{`基本使用`}</h2>\n    <Playground __position={0} __code={'class Demo extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = { activeCount: 3 }\\n    }\\n    componentDidMount() {\\n      this.interval = setInterval(() => {\\n        this.setState({\\n          activeCount: Math.floor(Math.random() * 20),\\n        })\\n      }, 3000)\\n    }\\n\\n    componentWillUnmount() {\\n      clearInterval(this.interval)\\n    }\\n\\n    render() {\\n      const itemStyle1 = { width: 40, height: 6 }\\n      return (\\n        <React.Fragment>\\n          <div>\\n            <AnimateBars\\n              style={{ width: 340, height: 60 }}\\n              startFrom=\\\"left\\\"\\n              activeCount={this.state.activeCount}\\n            />\\n          </div>\\n          <div>\\n            <AnimateBars\\n              style={{ width: 500, height: 90 }}\\n              itemSize={16}\\n              startFrom=\\\"right\\\"\\n              activeCount={this.state.activeCount}\\n            />\\n          </div>\\n          <div style={{ display: \\'flex\\' }}>\\n            <AnimateBars\\n              style={{ height: 400, width: 80 }}\\n              itemStyle={{ borderRadius: 6 }}\\n              itemSize={12}\\n              startFrom=\\\"top\\\"\\n              activeCount={this.state.activeCount}\\n            />\\n            <AnimateBars\\n              style={{\\n                marginLeft: 20,\\n                \\'--active-color\\': \\'#d0b96b\\',\\n                height: 300,\\n                width: 60,\\n              }}\\n              startFrom=\\\"bottom\\\"\\n              activeCount={this.state.activeCount}\\n            />\\n          </div>\\n        </React.Fragment>\\n      )\\n    }\\n  }'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      AnimateBars\n    }} mdxType=\"Playground\">\n      {class Demo extends React.Component {\n        constructor(props) {\n          super(props);\n          this.state = {\n            activeCount: 3\n          };\n        }\n\n        componentDidMount() {\n          this.interval = setInterval(() => {\n            this.setState({\n              activeCount: Math.floor(Math.random() * 20)\n            });\n          }, 3000);\n        }\n\n        componentWillUnmount() {\n          clearInterval(this.interval);\n        }\n\n        render() {\n          const itemStyle1 = {\n            width: 40,\n            height: 6\n          };\n          return <React.Fragment>\n          <div>\n            <AnimateBars style={{\n                width: 340,\n                height: 60\n              }} startFrom='left' activeCount={this.state.activeCount} mdxType=\"AnimateBars\" />\n          </div>\n          <div>\n             <AnimateBars style={{\n                width: 500,\n                height: 90\n              }} itemSize={16} startFrom='right' activeCount={this.state.activeCount} mdxType=\"AnimateBars\" />\n          </div>\n          <div style={{\n              display: 'flex'\n            }}>\n           <AnimateBars style={{\n                height: 400,\n                width: 80\n              }} itemStyle={{\n                borderRadius: 6\n              }} itemSize={12} startFrom='top' activeCount={this.state.activeCount} mdxType=\"AnimateBars\" />\n           <AnimateBars style={{\n                marginLeft: 20,\n                '--active-color': '#d0b96b',\n                height: 300,\n                width: 60\n              }} startFrom='bottom' activeCount={this.state.activeCount} mdxType=\"AnimateBars\" />\n           </div>\n          </React.Fragment>;\n        }\n\n      }}\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}